#!/usr/bin/perl
# abstract: add results from a beet query to the mpd playlist
# keep in mind that beet and mpd need to be in sync, or else:
# {add} No such directory at /home/scp1/lib/perl5/Audio/MPD.pm line 156
#   '--> error handling below

our $VERSION = '0.24';

use strict;
use warnings FATAL => 'all';
use utf8;
use open qw(:std :utf8);

use v5.30;

use Encode;
use Try::Tiny;
use Audio::MPD;
use IPC::Cmd qw(run);
use File::LsColor;
use Term::ExtendedColor qw(fg bold underline italic);
use Pod::Usage;
use Getopt::Long;
Getopt::Long::Configure qw(bundling auto_version);

use DateTime;

use DDP;

my $opt = {
  verbose => 0,  # incrementable
  add     => 1,  # binary, negatable
  color   => 1,  # binary, negatable
  query   => [], # array holding all the queries
};

my $mpd = Audio::MPD->new;

GetOptions(
  # Beets does not support hour time piece in a time query.
  # We circumvent that by doing datetime math.
  'hour:i' => sub {
    my($option, $hours) = @_;

    # if no argument provided, we'll default to 1 hour
    $hours = 1 unless $hours;
    my $now  = DateTime->now(time_zone => $ENV{TZ});
    # let's go way back
    my $past = $now->clone->subtract(hours => $hours);;

    # build up the query string for beets
    push(@{ $opt->{query} }, sprintf("added:%s..%s", $past, $now));
  },

  # This handles what's not considering an option so we can continue building up
  # more advanced beet queries.
  #
  # beet2mpd --hour 4 country:swe ^year:2008..2012
  '<>'         => sub {
    push(@{ $opt->{query} }, @_);
  },

  'add!'       => \$opt->{add},
  'color!'     => \$opt->{color},

  'v|verbose+' => \$opt->{verbose},
  'help'       => \&usage,
  'version'    => sub { printf "%s v%s\n", $0, $VERSION; exit },
);

usage() unless scalar @{ $opt->{query} };

# make paths relative for mpd
my @tracks = map { $_ =~ s|\Q$ENV{XDG_MUSIC_DIR}\E||; $_ } beet_ls($opt->{query});

if(scalar(@tracks) == 0) {
  say 'No results.';
  exit;
}

#if($opt->{verbose}) {
  printf("> %s%s songs matching query '%s'\n",
    $opt->{add} ? 'Adding ' : '',
    fg(208, bold(scalar @tracks)),
    fg(137, bold(italic(join(' ', @{ $opt->{query} }))))
  );
#}

for my $track(@tracks) {
  if($opt->{add}) {
    try {
      $mpd->playlist->add($track);
    }
    catch {
      if($opt->{verbose}) {
        chomp $_;
        $_ =~ m/No such directory/
          and printf "W: No such directory: $ENV{XDG_MUSIC_DIR}%s\n",
              ls_color($track);
      }
      else {
        # ignore
      }
    }
  }
  else {
    printf "%s\n", ls_color($track);
  }
}

sub ls_color {
  return $opt->{color}
    ? File::LsColor::ls_color(@_) 
    : @_;
}

sub beet_ls {
  my $query = shift;
  if(ref($query) eq 'ARRAY') {
    $query = join(' ', @{ $query });
  }

  my $buffer;

  scalar run(
    command => "beet ls $query",
    verbose => $opt->{verbose} > 1 ? $opt->{verbose} : 0,
    buffer  => \$buffer,
    timeout => 0,
  );
  return unless $buffer;
  my @results = split(/\n/, decode_utf8($buffer));
  return @results;
}

sub usage {
  pod2usage(verbose => $opt->{verbose} ? $opt->{verbose} : 1);
  exit;
}

=pod

=head1 beet2mpd

A bridge between beets and mpd. Lets you add songs to mpd using the
advanced query syntax system of beets.

=head1 SYNOPSIS

    beet2mpd                             # add everything
    beet2mpd comp:1                      # add compilations
    beet2mpd loved:1                     # https://github.com/trapd00r/utils/blob/master/love
    beet2mpd country:se                  # add music from sweden only
    beet2mpd genre:game                  # add game music
    beet2mpd mbid_trackid::^$            # add everything missing musicbrainz id
    beet2mpd label:'Masters of Hardcore' # add everything from a record label
    beet2mpd comments:foo                # do note the plural form!
    beet2mpd ^genre:rap albumtype:single # single releases that's NOT rap
    beet2mpd added:-1w..                 # add new music imported in the past week
    beet2mpd albumdisambig:explicit      # no censored lyrics

    # add official album releases
    beet2mpd albumtype:album albumstatus:official

    # add music released the day you were born
    beet2mpd original_day:14 original_month:8 original_year:1990

    # add music released this day in history
    beet2mpd original_day:$(date +%d) original_month:$(date +%m)

    # add music from year 2000-2004 that's NOT pop, rock, rap or hip-hop:
    beet2mpd year:2000..2004 \^genre:pop,rock,rap,hip-hop

    # add music from 1999 where album name contains love, but track
    # titles does not:
    beet2mpd  year:1999 album:love \^title:love

    # add new music imported in the past hour
    beet2mpd --hour 1 -v

    # make a query but don't add results to mpd; simply print the results
    # for possible piping to other applications.
    beet2mpd artist:lindfors --no-add --nocolor --hour 4 genre:pop

=head1 OPTIONS

  All boolean options are enabled with --option and yet again
  disabled with --no-option. That is, you use the same option name but prefix
  it with 'no-'.

          --color  Enable or disable colorized output.
          --add,   Add or print results from a query.
          --hour   Add tracks added to beets n hour(s) ago.

    -v,   --verbose   Increase the verbosity. Can be specified multiple times.
    -h,   --help      Display this help and exit.

=head1 ENVIRONMENT

B<${XDG_MUSIC_DIR}> should be set to the same directory as your library in
I<beets/config.yaml>

Keep in mind that beets and mpd should be in sync, or else:

  {add} No such directory at Audio/MPD.pm line 156

Though accounted for in the error handling, this will mean that some
results from a given query won't be added to the playlist.

=head1 INSTALLATION

=head2 cpanminus

    $ cd beet2mpd/
    $ cpanm .

=head2 Manual method

    $ cd beet2mpd/
    $ cpan Audio::MPD File::LsColor Try::Tiny
    $ perl Makefile.PL
    $ make
    # make install


=head1 AUTHOR

  Magnus Woldrich
  CPAN ID: WOLDRICH
  m@japh.se
  japh@irc.libera.chat
  http://japh.se
  http://github.com/trapd00r

=head1 COPYRIGHT

Copyright 2021,2022 Magnus Woldrich
